@*<h3>DepositsRateEditedForm</h3>*@


<EditForm Model="ViewModel" OnValidSubmit="Save"
          OnInvalidSubmit="Error">

    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>

    <div class="form-group row">
        <lable for="DataDate" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Data Date
        </lable>
        <div class="col-sm-4">
            <InputDate id="DataDate" class="form-control" readonly=@IsEdit placeholder="Data Date" @bind-Value="@ViewModel.DataDate"></InputDate>
        </div>
    </div>

    <div class="form-group row">
        <lable for="Ccy" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Currency
        </lable>
        <div class="col-sm-4">
            <InputSelect id="Ccy" class="form-control" disabled=@IsEdit placeholder="Currency" @bind-Value="@ViewModel.Ccy">
                @foreach (var ccy in Enum.GetValues(typeof(RateCcy)))
                {
                    <option value="@ccy">@ccy</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="form-group row">
        <lable for="Duration" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Duration
        </lable>
        <div class="col-sm-4">
            <InputNumber id="Duration" class=" form-control" readonly=@IsEdit placeholder="Duration" @bind-Value="@ViewModel.Duration"></InputNumber>
            <ValidationMessage For="(() => ViewModel.Duration)"></ValidationMessage>
        </div>
    </div>
    <div class="form-group row">
        <lable for="DurationUnit" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Duration Unit
        </lable>
        <div class="col-sm-4">
            <InputSelect id="DurationUnit" class="form-control" disabled=@IsEdit placeholder="Duration Unit " @bind-Value="@ViewModel.DurationUnit">
                @foreach (var durationunit in Enum.GetValues(typeof(BisRateDurationUnit)))
                {
                    <option value="@durationunit">@durationunit</option>
                }
            </InputSelect>
        </div>
    </div>

    <div class="form-group row">
        <lable for="BidRate" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Bid Rate
        </lable>
        <div class="col-sm-4">
            <InputNumber id="BidRate" class=" form-control" placeholder="BidRate" @bind-Value="@ViewModel.BidRate"></InputNumber>
            <ValidationMessage For="(() => ViewModel.BidRate)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <lable for="OfferRate" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Offer Rate
        </lable>
        <div class="col-sm-4">
            <InputNumber id="OfferRate" class=" form-control" placeholder="OfferRate" @bind-Value="@ViewModel.OfferRate"></InputNumber>
            <ValidationMessage For="(() => ViewModel.OfferRate)"></ValidationMessage>
        </div>
    </div>

    <div class="form-group row">
        <lable for="ImportedBy" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Imported By
        </lable>
        <div class="col-sm-4">
            <InputText id="ImportedBy" class="form-control"  readonly=@IsEdit placeholder="Imported By" @bind-Value="@ViewModel.ImportedBy"></InputText>
        </div>
    </div>
    <div class="form-group row">
        <lable for="RecStatus" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Rec Status
        </lable>
        <div class="col-sm-4">
            <InputText id="Rec Status" class="form-control" readonly=@IsEdit placeholder ="Rec Status" @bind-Value="@ViewModel.RecStatus"></InputText>
        </div>
    </div>
    <div class="form-group row">
        <lable for="ImportedTime" class="col-sm-2 col-form-label font-weight-bold text-primary">
            Imported Time
        </lable>
        <div class="col-sm-4">
            <InputDate id="ImportedTime" class="form-control" readonly=@IsEdit placeholder="Imported Time" @bind-Value="@ViewModel.ImportedTime"></InputDate>
        </div>
    </div>

    <button class="btn btn-primary" type="submit">Save</button>
</EditForm>


@using mhcb.Syd.Models;
@using mhcb.Syd.DataAccess.Models.GUIDE;

@code {
    //public static readonly List<string> lstRateDurition =
    //            new List<string> { "1M", "2M", "3M", "4M", "5M" };

    // Note: Parameter value is start with Upcase
    [Parameter]
    public SwapRateViewModel ViewModel { get; set; }

    [Parameter]
    public EventCallback<SwapRateViewModel> CallBackOnSave { get; set; }

    [Parameter]
    public EventCallback<SwapRateViewModel> CallBackOnError { get; set; }

    [Parameter]
    public bool IsEdit { get; set; }

    private void Save()
    {
        CallBackOnSave.InvokeAsync(ViewModel);
    }

    private void Error()
    {
        CallBackOnError.InvokeAsync(ViewModel);
    }
}
