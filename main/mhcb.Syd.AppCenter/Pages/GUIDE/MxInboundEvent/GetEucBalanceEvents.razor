@page "/GetEucBalanceEvents"
@attribute [Authorize]

<div class="container-fluid">
	<div class="card">
		@*Section 1 - Title *@
		<div class="card bg-primary text-white">
			<div class="card-header">
				<h4>EUC Balance Events by Event Date</h4>
			</div>
		</div>

		@*Section 2 - Search*@
		<div class="card-body">

			@*Section 2 - Parameters*@
			<div class="row">
				<div class="col-sm-4">
					<table class="table table-sm table-bordered table-primary Col-Head-Left">
						<tbody thead class="thead-light">
							<tr>
								<td><label for="Id" class="col-form-label">Event Date</label></td>
								<td><input type="date" class="form-control" @bind="SelectedOptDate" /></td>
							</tr>
						</tbody>
					</table>

					<div class="well">
						<button class="btn btn-outline-primary m-1 float-left btn-width-80" @onclick="(()=>SearchClick())">Search</button>
						<button class="btn btn-outline-info m-1 float-left btn-width-80"  @onclick="(()=>CopyClick())">Copy</button>
						<button class="btn btn-outline-primary m-1 btn-GoBack" @onclick="(()=>BackClick())">Back</button>
					</div>
				</div>
			</div>
		</div>


		@*Section 3 - list display*@
		<div class="card-footer">

			@if (modelView == null && SelectedCategory != "")
			{
				<div class="spinner"></div>
			}
			else
			{

				<div class="row">
					<div class="col-sm-12">
						<div name="SelectedReport" class="table-wrapper-scroll-y my-custom-scrollbar" style="height:800px;">
							@*Section 4 - list via TableTemplate*@
							<TableTemplate Items="modelView.ToList()">
								<TableHeader>
									<th>Batch No</th>
									<th>Event Id</th>
									<th>Event Type</th>
									<th>Category</th>
									<th>Event Status</th>
									<th>Reference No</th>
									<th>Cust Abbr</th>
									<th>Branch No</th>
									<th>Currency</th>
									<th>Nominal Amount</th>
									<th>Trade Date</th>
									<th>Effective Date</th>
									<th>EUC Balance Status</th>
								</TableHeader>
								<RowTemplate Context="item">
									<td>@item.BatchNo</td>
									<td>@item.MessageId</td>
									<td>@item.EventType</td>
									<td>@item.Category</td>
									<td>@item.EventStatus</td>
									<td>@item.GBaseReferenceNo</td>
									<td>@item.CustomerAbbreviation</td>
									<td>@item.BranchNo</td>
									<td>@item.Currency</td>
									<td>@item.NominalAmount</td>
									<td>@item.TradeDate</td>
									<td>@item.EffectiveDate</td>
									<td>@item.BalanceStatus</td>
								</RowTemplate>
								<TableFooter>
									<th>Batch No</th>
									<th>Event Id</th>
									<th>Event Type</th>
									<th>Category</th>
									<th>Event Status</th>
									<th>Reference No</th>
									<th>Cust Abbr</th>
									<th>Branch No</th>
									<th>Currency</th>
									<th>Nominal Amount</th>
									<th>Trade Date</th>
									<th>Effective Date</th>
									<th>EUC Balance Status</th>
								</TableFooter>
							</TableTemplate>
						</div>

					</div>
				</div>
			
			}
		</div>
	</div>

	<ConfirmationBox Title="@Title"
					 Message="@Message"
					 YesButtonText="@YesButtonText"
					 NoButtonText="@NoButtonText"
					 InfoButtonText="@InfoButtonText"
					 BtnClass="@BtnClass"
					 ConfirmationChanged="Save"  
					 InformationChanged="OkClick"
					 IsVisible="IsVisible"
					 IsInformationOnly="IsInformationOnly">
	</ConfirmationBox>
</div>



@inject IHttpService<MxEucBalanceView> _httpService;
@inject IJSRuntime IJSRuntime ;
@inject NavigationManager navigationManager ;

@code {
	public IEnumerable<MxEucBalanceView> modelView { get; set; } = new List<MxEucBalanceView>();

	public DateTime SelectedOptDate { get; set; } = DateTime.Today;

	public string SelectedCategory { get; set; } = "GBaseRefNo";

	// ** Variables for confirmation box
	public string Title { get; set; }
	public string Message { get; set; }
	public string YesButtonText { get; set; }
	public string NoButtonText { get; set; }
	public string InfoButtonText { get; set; }
	public bool IsVisible { get; set; }
	public bool IsInformationOnly { get; set; }
	public string BtnClass { get; set; }
	// ** End

	protected override void OnInitialized()
	{
		Title = "EUC Balance Events";
		Message = "Do you want to save?";
		YesButtonText = "Yes";
		NoButtonText = "No";
		InfoButtonText = "OK";
		BtnClass = "btn btn-primary float-left";
	}
	protected void Save(bool IsSave) { IsVisible = IsSave; }
	protected void OkClick() => IsVisible = false;

	protected async Task SearchClick()
	{
		modelView = null;
		string optDate = SelectedOptDate.ToString("yyyy-MM-dd");
		//modelView = (await _httpService2.GetEUCBalanceEvents(optDate)).ToList();
		modelView = (await _httpService.GetAllAsync($"api/EUCBalanceEvents/GetEucBalanceEvents/{optDate}", null)).ToList();

		if (modelView.Count() == 0)
		{
			//ConfirmationComponent.Show();
			IsVisible = true;
			IsInformationOnly = true;
			Message = "No records found.";
		}
	}
	protected async Task CopyClick()
	{
		await IJSRuntime.InvokeAsync<object>("selectElementContents", "SelectedReport");
		await IJSRuntime.InvokeVoidAsync("alert", "Now you can paste the context to excel file.");
	}
	protected void BackClick() => navigationManager.NavigateTo($"/MxInbound");

}