@page "/GetMMTransactionByDates"
@attribute [Authorize]


<div class="container-fluid">

	<div class="card">
		@*Section 1 - Title *@
		<div class="card bg-primary text-white">
			<div class="card-header">
				<h4>Search Money Market Transaction by Dates</h4>
			</div>
		</div>

		@*Section 2 - Search*@
		<div class="card-body" style="width:1000px;">
			@*Section 2 - Parameters*@
			<div class="row">
				<div class="col-sm-4">
					<table class="table table-sm table-bordered table-primary Col-Head-Left">
						<tbody thead class="thead-light">
							<tr>
								<td colspan="2"><label for="Id" class="col-form-label">Operation Date</label></td>
							</tr>
							<tr>
								<td><label for="Id" class="col-form-label">From</label></td>
								<td><input type="date" class="form-control" @bind="SelectedDateFrom" /></td>
							</tr>
							<tr>
								<td><label for="Id" class="col-form-label">To</label></td>
								<td><input type="date" class="form-control" @bind="SelectedDateTo" /></td>
							</tr>
						</tbody>
					</table>
					<div class="well">
						<button class="btn btn-outline-primary m-1 float-left btn-width-80" @onclick="(()=>SearchClick())">Search</button>
						<button class="btn btn-outline-info m-1 float-left btn-width-80"  @onclick="(()=>CopyClick())">Copy</button>
						<button class="btn btn-outline-primary m-1 btn-GoBack" @onclick="(()=>BackClick())">Back</button>
					</div>
				</div>
			</div>
		</div>


		@*Section 3 - list display*@
		<div class="card-footer">

			@if (modelView == null)
			{
				<div class="spinner"></div>
			}
			else
			{
				<div class="row">
					<div class="col-sm-12">
						<div name="SelectedReport" class="table-wrapper-scroll-y my-custom-scrollbar" style="height:700px;">
							@*Section 4 - list via TableTemplate*@
							<TableTemplate Items="modelView.ToList()">
								<TableHeader>
									<th>GBase RefNo</th>
									<th>Counterpart Abbr</th>
									<th>Counterpart Short Name</th>
									<th>Ticket Template</th>
									<th>Event</th>
									<th>Typology</th>
									<th>Portfolio Desk</th>
									<th>Portfolio Book</th>
									<th>Contract Version</th>

									<th>Operation Date</th>
									<th>Contract Date</th>
									<th>Value Date</th>
									<th>Final DueDate</th>
									<th>Due Date</th>
									<th>Trade Date</th>
									<th>Payment Date</th>

									<th>Currency</th>
									<th>Principal Amount</th>
									<th>Interest Rate</th>
									<th>Interest Amount</th>

									<th>Internal Rate</th>
									<th>Settlement Details</th>

									<!---- not for ('Call Depo', 'Call Loan') ,
									-- not for ('CD')
									-- but for Typology in ('Depo', 'Loan')-->
									<th>Net Interest</th>
									<th>Total Due</th>

									<!---- not for Typology in ('Depo', 'Loan')
									-- not for ('CD')-->
									<th>Principal Amount Previous</th>
									<th>Rollover Type</th>
									<th>Rollover Type Label</th>
									<th>Principal Amount Closing</th>
									<th>Settlement Direction Label</th>

									<!---- For ('CD')  only-->
									<th>Buy/Sell</th>

									<!---- not for ('Call Depo', 'Call Loan') ,
									-- not for ('Depo', 'Loan')-->
									<th>Denomination</th>
									<th>Quantity</th>
									<th>Face Amount</th>
									<th>Consideration Amount</th>

									<th>Status</th>
									<th>DEPT_CD</th>
								</TableHeader>
								<RowTemplate Context="item">
									<td>@item.GBaseRefNo</td>
									<td>@item.CounterpartyAbbreviation</td>
									<td>@item.CounterpartyShortName</td>
									<td>@item.TicketTemplate</td>
									<td>@item.Event</td>
									<td>@item.Typology</td>
									<td>@item.PortfolioDesk</td>
									<td>@item.PortfolioBook</td>
									<td>@item.ContractVersion</td>

									<td>@item.OperationDate</td>
									<td>@item.ContractDate</td>
									<td>@item.ValueDate</td>
									<td>@item.FinalDueDate</td>
									<td>@item.DueDate</td>
									<td>@item.TradeDate</td>
									<td>@item.PaymentDate</td>

									<td>@item.Currency</td>
									<td>@item.PrincipalAmount.ToString("0,0.00")</td>
									<td>@item.InterestRate</td>
									<td>@item.InterestAmount.ToString("0,0.00")</td>

									<td>@item.InternalRate</td>
									<td>@item.SettlementDetails</td>

									<td>@item.NetInterest.ToString("0,0.00")</td>
									<td>@item.TotalDue</td>

									<td>@item.PrincipalAmountPrevious.ToString("0,0.00")</td>
									<td>@item.RolloverType</td>
									<td>@item.RolloverTypeLabel</td>
									<td>@item.PrincipalAmountClosing.ToString("0,0.00")</td>
									<td>@item.SettlementDirectionLabel</td>

									<td>@item.BuySell</td>

									<td>@item.Denomination</td>
									<td>@item.Quantity</td>
									<td>@item.FaceAmount</td>
									<td>@item.ConsiderationAmount</td>

									<td>@item.TransactionStatus</td>
									<td>@item.DEPARTMENT_CD</td>
								</RowTemplate>
								<TableFooter>
									<th>GBase RefNo</th>
									<th>Counterpart Abbr</th>
									<th>Counterpart Short Name</th>
									<th>Ticket Template</th>
									<th>Event</th>
									<th>Typology</th>
									<th>Portfolio Desk</th>
									<th>Portfolio Book</th>
									<th>Contract Version</th>

									<th>Operation Date</th>
									<th>Contract Date</th>
									<th>Value Date</th>
									<th>Final DueDate</th>
									<th>Due Date</th>
									<th>Trade Date</th>
									<th>Payment Date</th>

									<th>Currency</th>
									<th>Principal Amount</th>
									<th>Interest Rate</th>
									<th>Interest Amount</th>

									<th>Internal Rate</th>
									<th>Settlement Details</th>

									<!---- not for ('Call Depo', 'Call Loan') ,
									-- not for ('CD')
									-- but for Typology in ('Depo', 'Loan')-->
									<th>Net Interest</th>
									<th>Total Due</th>

									<!---- not for Typology in ('Depo', 'Loan')
									-- not for ('CD')-->
									<th>Principal Amount Previous</th>
									<th>Rollover Type</th>
									<th>Rollover Type Label</th>
									<th>Principal Amount Closing</th>
									<th>Settlement Direction Label</th>

									<!---- For ('CD')  only-->
									<th>Buy/Sell</th>

									<!---- not for ('Call Depo', 'Call Loan') ,
									-- not for ('Depo', 'Loan')-->
									<th>Denomination</th>
									<th>Quantity</th>
									<th>Face Amount</th>
									<th>Consideration Amount</th>

									<th>Status</th>
									<th>DEPT_CD</th>
								</TableFooter>
							</TableTemplate>
						</div>
					</div>
				</div>			
			}
		</div>
	</div>

	<ConfirmationBox Title="@Title"
					 Message="@Message"
					 YesButtonText="@YesButtonText"
					 NoButtonText="@NoButtonText"
					 InfoButtonText="@InfoButtonText"
					 BtnClass="@BtnClass"
					 ConfirmationChanged="Save"  
					 InformationChanged="OkClick"
					 IsVisible="IsVisible"
					 IsInformationOnly="IsInformationOnly">
	</ConfirmationBox>
</div>


@inject IHttpService<MoneyMarketReportView> _httpService;
@inject IJSRuntime IJSRuntime;
@inject NavigationManager navigationManager;

@code {
	public IEnumerable<MoneyMarketReportView> modelView { get; set; } = new List<MoneyMarketReportView>();
	public DateTime SelectedDateFrom { get; set; } = DateTime.Today;
	public DateTime SelectedDateTo { get; set; } = DateTime.Today;

	// ** Variables for confirmation box
	public string Title { get; set; }
	public string Message { get; set; }
	public string YesButtonText { get; set; }
	public string NoButtonText { get; set; }
	public string InfoButtonText { get; set; }
	public bool IsVisible { get; set; }
	public bool IsInformationOnly { get; set; }
	public string BtnClass { get; set; }
	// ** End

	protected override void OnInitialized()
	{
		Title = "MoneyMarket Transaction";
		Message = "Do you want to save?";
		YesButtonText = "Yes";
		NoButtonText = "No";
		InfoButtonText = "OK";
		BtnClass = "btn btn-primary float-left";
	}
	protected async Task SearchClick()
	{
		modelView = null;
		string dateFrom = SelectedDateFrom.ToString("yyyy-MM-dd");
		string dateTo = SelectedDateTo.ToString("yyyy-MM-dd");
		//modelView = (await _httpService2.GetMMTransByDates(dateFrom, dateTo)).ToList();
		modelView = (await _httpService.GetAllAsync($"api/MoneyMarketTickets/GetMMTransByDates/{dateFrom}/{dateTo}", null)).ToList();

		if (modelView.Count() == 0)
		{
			IsVisible = true;
			IsInformationOnly = true;
			Message = "No records found.";
		}
	}

	protected void Save(bool IsSave) { IsVisible = IsSave; }
	protected void OkClick() => IsVisible = false;

	protected async Task CopyClick()
	{
		await IJSRuntime.InvokeAsync<object>("selectElementContents", "SelectedReport");
		await IJSRuntime.InvokeVoidAsync("alert", "Now you can paste the context to excel file.");
	}
	protected void BackClick() => navigationManager.NavigateTo($"/AuditReport");

}